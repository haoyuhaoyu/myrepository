CREATE DATABASE IF NOT EXISTS Technology;
USE DATABASE Technology;
CREATE SCHEMA IF NOT EXISTS [gh];

CREATE TABLE IF NOT EXISTS [gh].[GH_User](
	[ID] long,
	[UserHash] string,
	[Login] string,
	[UserType] string,
	[IsSiteAdmin] bool?,
	[Name] string,
	[Company] string,
	[Blog] string,
	[Location] string,
	[Email] string,
	[IsHireable] bool?,
	[Bio] string,
	[PublicRepos] int?,
	[PublicGists] int?,
	[Followers] int?,
	[Following] int?,
	[IsOrg] bool?,
	[CreatedYear] int,
	[CreatedDate] DateTime?,
	[UpdatedDate] DateTime?,
	[IsDeleted] bool?,
	[InsertDateTime] DateTime?,
	INDEX PK_User1 CLUSTERED([ID] ASC)
)
PARTITIONED BY ([CreatedYear])
DISTRIBUTED BY HASH ([ID]);

ALTER TABLE [gh].[GH_User] ADD IF NOT EXISTS 
	PARTITION(1951), PARTITION(1952), PARTITION(1953), PARTITION(1954), PARTITION(1955), PARTITION(1956), PARTITION(1957), PARTITION(1958), 
	PARTITION(1959), PARTITION(1960), PARTITION(1961), PARTITION(1962), PARTITION(1963), PARTITION(1964), PARTITION(1965), PARTITION(1966), 
	PARTITION(1967), PARTITION(1968), PARTITION(1969), PARTITION(1970), PARTITION(1971), PARTITION(1972), PARTITION(1973), PARTITION(1974), 
	PARTITION(1975), PARTITION(1976), PARTITION(1977), PARTITION(1978), PARTITION(1979), PARTITION(1980), PARTITION(1981), PARTITION(1982), 
	PARTITION(1983), PARTITION(1984), PARTITION(1985), PARTITION(1986), PARTITION(1987), PARTITION(1988), PARTITION(1989), PARTITION(1990), 
	PARTITION(1991), PARTITION(1992), PARTITION(1993), PARTITION(1994), PARTITION(1995), PARTITION(1996), PARTITION(1997), PARTITION(1998), 
	PARTITION(1999), PARTITION(2000), PARTITION(2001), PARTITION(2002), PARTITION(2003), PARTITION(2004), PARTITION(2005), PARTITION(2006), 
	PARTITION(2007), PARTITION(2008), PARTITION(2009), PARTITION(2010), PARTITION(2011), PARTITION(2012), PARTITION(2013), PARTITION(2014), 
	PARTITION(2015), PARTITION(2016), PARTITION(2017), PARTITION(2018), PARTITION(2019), PARTITION(2020), PARTITION(2021), PARTITION(2022),
	PARTITION(2023), PARTITION(2024), PARTITION(2025), PARTITION(2026), PARTITION(2027), PARTITION(2028), PARTITION(2029), PARTITION(2030) ;


CREATE TABLE IF NOT EXISTS [gh].[GH_UserOrganization](
	[UserID] long,
	[OrganizationID] long,
	[IsDeleted] bool,
	[Org] string,
	[InsertDateTime] DateTime?
)
DISTRIBUTED BY HASH ([UserID],[OrganizationID]);


CREATE TABLE IF NOT EXISTS [gh].[GH_ReposTopic](
	[ReposId] long?,
	[Topic] string,
	[IsDeleted] bool?,
	[InsertDateTime] DateTime?
)
DISTRIBUTED BY HASH ([ReposId]);

CREATE TABLE IF NOT EXISTS [gh].[GH_Repos](
	[Id] long,
	[ReposName] string,
	[OriginalOwnerID] long?,
	[FullName] string,
	[Language] string,
	[ReposLanguageID] int?,
	[OriginalReposID] long?,
	[OriginalSourceReposID] long?,
	[Fork] bool?,
	[ForksCount] int?,
	[NetworkCount] int?,
	[HasDownloads] bool?,
	[HasIssues] bool?,
	[HasPages] bool?,
	[HasWiki] bool?,
	[IsDeleted] bool?,
	[Private] bool?,
	[OpenIssues] int?,
	[SubscribersCount] int?,
	[Size] int?,
	[Watchers] int?,
	[StargazersCount] int?,
	[CreatedDate] DateTime?,
	[CreatedYear] int,
	[UpdatedDate] DateTime?,
	[PushedDate] DateTime?,
	[CreatedDateKey] int?,
	[UpdatedDateKey] int?,
	[PushedDatekey] int?,
	[Homepage] string,
	[DefaultBranch] string,
	[Description] string,
	[InsertDateTime] DateTime?,
	INDEX PK_ReposNew CLUSTERED([Id] ASC)
)
PARTITIONED BY ([CreatedYear])
DISTRIBUTED BY HASH ([Id]);

ALTER TABLE [gh].[GH_Repos] ADD IF NOT EXISTS 
	PARTITION(1951), PARTITION(1952), PARTITION(1953), PARTITION(1954), PARTITION(1955), PARTITION(1956), PARTITION(1957), PARTITION(1958), 
	PARTITION(1959), PARTITION(1960), PARTITION(1961), PARTITION(1962), PARTITION(1963), PARTITION(1964), PARTITION(1965), PARTITION(1966), 
	PARTITION(1967), PARTITION(1968), PARTITION(1969), PARTITION(1970), PARTITION(1971), PARTITION(1972), PARTITION(1973), PARTITION(1974), 
	PARTITION(1975), PARTITION(1976), PARTITION(1977), PARTITION(1978), PARTITION(1979), PARTITION(1980), PARTITION(1981), PARTITION(1982), 
	PARTITION(1983), PARTITION(1984), PARTITION(1985), PARTITION(1986), PARTITION(1987), PARTITION(1988), PARTITION(1989), PARTITION(1990), 
	PARTITION(1991), PARTITION(1992), PARTITION(1993), PARTITION(1994), PARTITION(1995), PARTITION(1996), PARTITION(1997), PARTITION(1998), 
	PARTITION(1999), PARTITION(2000), PARTITION(2001), PARTITION(2002), PARTITION(2003), PARTITION(2004), PARTITION(2005), PARTITION(2006), 
	PARTITION(2007), PARTITION(2008), PARTITION(2009), PARTITION(2010), PARTITION(2011), PARTITION(2012), PARTITION(2013), PARTITION(2014), 
	PARTITION(2015), PARTITION(2016), PARTITION(2017), PARTITION(2018), PARTITION(2019), PARTITION(2020), PARTITION(2021), PARTITION(2022),
	PARTITION(2023), PARTITION(2024), PARTITION(2025), PARTITION(2026), PARTITION(2027), PARTITION(2028), PARTITION(2029), PARTITION(2030) ;

CREATE TABLE IF NOT EXISTS [gh].[GH_PullRequest](
	[Id] long,
	[RepoId] long,
	[Number] long?,
	[Title] string,
	[Body] string,
	[BaseLabel] string,
	[BaseUserId] long?,
	[BaseRepoId] long?,
	[HeadLabel] string,
	[HeadUserId] long?,
	[HeadRepoId] long?,
	[Additions] int?,
	[ChangedFiles] int?,
	[Deletions] int?,
	[Commits] int?,
	[CommentsCount] int?,
	[ReviewCommentsCount] int?,
	[UserId] long?,
	[State] string,
	[AssigneeId] long?,
	[Merged] bool?,
	[Mergeable] bool?,
	[MergeableState] string,
	[MergedDate] DateTime?,
	[MergedById] long?,
	[ClosedDate] DateTime?,
	[Locked] bool?,
	[CreatedDate] DateTime?,
	[CreatedYear] int,
	[UpdatedDate] DateTime?,
	[IsDeleted] bool?,
	[InsertDateTime] DateTime?,
	INDEX PK_PullRequest CLUSTERED([Id] ASC, [RepoId] ASC)
)
PARTITIONED BY ([CreatedYear])
DISTRIBUTED BY HASH ([Id],[RepoId]);

ALTER TABLE [gh].[GH_PullRequest] ADD IF NOT EXISTS 
	PARTITION(1951), PARTITION(1952), PARTITION(1953), PARTITION(1954), PARTITION(1955), PARTITION(1956), PARTITION(1957), PARTITION(1958), 
	PARTITION(1959), PARTITION(1960), PARTITION(1961), PARTITION(1962), PARTITION(1963), PARTITION(1964), PARTITION(1965), PARTITION(1966), 
	PARTITION(1967), PARTITION(1968), PARTITION(1969), PARTITION(1970), PARTITION(1971), PARTITION(1972), PARTITION(1973), PARTITION(1974), 
	PARTITION(1975), PARTITION(1976), PARTITION(1977), PARTITION(1978), PARTITION(1979), PARTITION(1980), PARTITION(1981), PARTITION(1982), 
	PARTITION(1983), PARTITION(1984), PARTITION(1985), PARTITION(1986), PARTITION(1987), PARTITION(1988), PARTITION(1989), PARTITION(1990), 
	PARTITION(1991), PARTITION(1992), PARTITION(1993), PARTITION(1994), PARTITION(1995), PARTITION(1996), PARTITION(1997), PARTITION(1998), 
	PARTITION(1999), PARTITION(2000), PARTITION(2001), PARTITION(2002), PARTITION(2003), PARTITION(2004), PARTITION(2005), PARTITION(2006), 
	PARTITION(2007), PARTITION(2008), PARTITION(2009), PARTITION(2010), PARTITION(2011), PARTITION(2012), PARTITION(2013), PARTITION(2014), 
	PARTITION(2015), PARTITION(2016), PARTITION(2017), PARTITION(2018), PARTITION(2019), PARTITION(2020), PARTITION(2021), PARTITION(2022),
	PARTITION(2023), PARTITION(2024), PARTITION(2025), PARTITION(2026), PARTITION(2027), PARTITION(2028), PARTITION(2029), PARTITION(2030) ;

CREATE TABLE IF NOT EXISTS [gh].[GH_Issue](
	[Id] long,
	[RepoId] long,
	[Number] int?,
	[Title] string,
	[Body] string,
	[CommentsCount] int?,
	[UserId] long?,
	[State] string,
	[AssigneeId] long?,
	[ClosedDate] DateTime?,
	[ClosedById] long?,
	[Locked] bool?,
	[CreatedDate] DateTime?,
	[CreatedYear] int,
	[UpdatedDate] DateTime?,
	[IsDeleted] bool?,
	[InsertDateTime] DateTime?,
	INDEX PK_Issue CLUSTERED([Id] ASC, [RepoId] ASC)
)
PARTITIONED BY ([CreatedYear])
DISTRIBUTED BY HASH ([Id],[RepoId]);

ALTER TABLE [gh].[GH_Issue] ADD IF NOT EXISTS 
	PARTITION(1951), PARTITION(1952), PARTITION(1953), PARTITION(1954), PARTITION(1955), PARTITION(1956), PARTITION(1957), PARTITION(1958), 
	PARTITION(1959), PARTITION(1960), PARTITION(1961), PARTITION(1962), PARTITION(1963), PARTITION(1964), PARTITION(1965), PARTITION(1966), 
	PARTITION(1967), PARTITION(1968), PARTITION(1969), PARTITION(1970), PARTITION(1971), PARTITION(1972), PARTITION(1973), PARTITION(1974), 
	PARTITION(1975), PARTITION(1976), PARTITION(1977), PARTITION(1978), PARTITION(1979), PARTITION(1980), PARTITION(1981), PARTITION(1982), 
	PARTITION(1983), PARTITION(1984), PARTITION(1985), PARTITION(1986), PARTITION(1987), PARTITION(1988), PARTITION(1989), PARTITION(1990), 
	PARTITION(1991), PARTITION(1992), PARTITION(1993), PARTITION(1994), PARTITION(1995), PARTITION(1996), PARTITION(1997), PARTITION(1998), 
	PARTITION(1999), PARTITION(2000), PARTITION(2001), PARTITION(2002), PARTITION(2003), PARTITION(2004), PARTITION(2005), PARTITION(2006), 
	PARTITION(2007), PARTITION(2008), PARTITION(2009), PARTITION(2010), PARTITION(2011), PARTITION(2012), PARTITION(2013), PARTITION(2014), 
	PARTITION(2015), PARTITION(2016), PARTITION(2017), PARTITION(2018), PARTITION(2019), PARTITION(2020), PARTITION(2021), PARTITION(2022),
	PARTITION(2023), PARTITION(2024), PARTITION(2025), PARTITION(2026), PARTITION(2027), PARTITION(2028), PARTITION(2029), PARTITION(2030) ;

CREATE TABLE IF NOT EXISTS [gh].[GH_IssueComments](
	[IssueCommentId] long,
	[IssueId] long,
	[Body] string,
	[UserId] long?,
	[CreatedDate] DateTime?,
	[CreatedYear] int,
	[UpdatedDate] DateTime?,
	[IsDeleted] bool?,
	[InsertDateTime] DateTime?,
	INDEX PK_IssueComment CLUSTERED([IssueCommentId] ASC)
)
PARTITIONED BY ([CreatedYear])
DISTRIBUTED BY HASH ([IssueCommentId]);

ALTER TABLE [gh].[GH_IssueComments] ADD IF NOT EXISTS 
	PARTITION(1951), PARTITION(1952), PARTITION(1953), PARTITION(1954), PARTITION(1955), PARTITION(1956), PARTITION(1957), PARTITION(1958), 
	PARTITION(1959), PARTITION(1960), PARTITION(1961), PARTITION(1962), PARTITION(1963), PARTITION(1964), PARTITION(1965), PARTITION(1966), 
	PARTITION(1967), PARTITION(1968), PARTITION(1969), PARTITION(1970), PARTITION(1971), PARTITION(1972), PARTITION(1973), PARTITION(1974), 
	PARTITION(1975), PARTITION(1976), PARTITION(1977), PARTITION(1978), PARTITION(1979), PARTITION(1980), PARTITION(1981), PARTITION(1982), 
	PARTITION(1983), PARTITION(1984), PARTITION(1985), PARTITION(1986), PARTITION(1987), PARTITION(1988), PARTITION(1989), PARTITION(1990), 
	PARTITION(1991), PARTITION(1992), PARTITION(1993), PARTITION(1994), PARTITION(1995), PARTITION(1996), PARTITION(1997), PARTITION(1998), 
	PARTITION(1999), PARTITION(2000), PARTITION(2001), PARTITION(2002), PARTITION(2003), PARTITION(2004), PARTITION(2005), PARTITION(2006), 
	PARTITION(2007), PARTITION(2008), PARTITION(2009), PARTITION(2010), PARTITION(2011), PARTITION(2012), PARTITION(2013), PARTITION(2014), 
	PARTITION(2015), PARTITION(2016), PARTITION(2017), PARTITION(2018), PARTITION(2019), PARTITION(2020), PARTITION(2021), PARTITION(2022),
	PARTITION(2023), PARTITION(2024), PARTITION(2025), PARTITION(2026), PARTITION(2027), PARTITION(2028), PARTITION(2029), PARTITION(2030) ;

CREATE TABLE IF NOT EXISTS [gh].[GH_PullRequestComments](
	[PullRequestCommentId] long,
	[PullRequestId] long,
	[Body] string,
	[CommitId] string,
	[OriginalCommitId] string,
	[Path] string,
	[UserId] long?,
	[CreatedDate] DateTime?,
	[CreatedYear] int,
	[UpdatedDate] DateTime?,
	[IsDeleted] bool?,
	[InsertDateTime] DateTime?,
	INDEX PK_PullRequestComment CLUSTERED([PullRequestCommentId] ASC)
)
PARTITIONED BY ([CreatedYear])
DISTRIBUTED BY HASH ([PullRequestCommentId]);
ALTER TABLE [gh].[GH_PullRequestComments] ADD IF NOT EXISTS 
	PARTITION(1951), PARTITION(1952), PARTITION(1953), PARTITION(1954), PARTITION(1955), PARTITION(1956), PARTITION(1957), PARTITION(1958), 
	PARTITION(1959), PARTITION(1960), PARTITION(1961), PARTITION(1962), PARTITION(1963), PARTITION(1964), PARTITION(1965), PARTITION(1966), 
	PARTITION(1967), PARTITION(1968), PARTITION(1969), PARTITION(1970), PARTITION(1971), PARTITION(1972), PARTITION(1973), PARTITION(1974), 
	PARTITION(1975), PARTITION(1976), PARTITION(1977), PARTITION(1978), PARTITION(1979), PARTITION(1980), PARTITION(1981), PARTITION(1982), 
	PARTITION(1983), PARTITION(1984), PARTITION(1985), PARTITION(1986), PARTITION(1987), PARTITION(1988), PARTITION(1989), PARTITION(1990), 
	PARTITION(1991), PARTITION(1992), PARTITION(1993), PARTITION(1994), PARTITION(1995), PARTITION(1996), PARTITION(1997), PARTITION(1998), 
	PARTITION(1999), PARTITION(2000), PARTITION(2001), PARTITION(2002), PARTITION(2003), PARTITION(2004), PARTITION(2005), PARTITION(2006), 
	PARTITION(2007), PARTITION(2008), PARTITION(2009), PARTITION(2010), PARTITION(2011), PARTITION(2012), PARTITION(2013), PARTITION(2014), 
	PARTITION(2015), PARTITION(2016), PARTITION(2017), PARTITION(2018), PARTITION(2019), PARTITION(2020), PARTITION(2021), PARTITION(2022),
	PARTITION(2023), PARTITION(2024), PARTITION(2025), PARTITION(2026), PARTITION(2027), PARTITION(2028), PARTITION(2029), PARTITION(2030) ;

CREATE TABLE IF NOT EXISTS [gh].[GH_ReposReadMe](
	[ReposID] long,
	[ReadmeText] string,
	[ReadmeTextCleaned] string,
	[InsertDateTime] DateTime?,
	INDEX PK_Readme CLUSTERED([ReposID] ASC)
)
DISTRIBUTED BY HASH ([ReposID]);